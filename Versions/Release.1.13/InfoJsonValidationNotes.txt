JSON parse errors

Could not parse Invalid \escape: line 31 column 20 (char 2499) text|C2ESV|C2ESV|info.json
Could not parse Invalid \escape: line 76 column 7 (char 9691) text|TPIPNG|info.json
Could not parse Invalid \escape: line 76 column 8 (char 10814) text|TPIPNG|TPIPNG|info.json
Could not parse Invalid \escape: line 32 column 9 (char 2103) text|KDJBSU|KDJBSU|info.json
Could not parse Expecting ',' delimiter: line 29 column 43 (char 1432) text|LSIBSM|LSIBSM|info.json
Could not parse Invalid \escape: line 41 column 8 (char 4735) text|PRKBSM|PRKBSM|info.json

Most of these contained very obvious errors that might have been caused by accidental editing,
or by saving the file using a program that used an incompatible character encoding.
All of the above were manually corrected on copies of info.json stored on my laptop.

Most files contained one or two errors, but KDJSBU contain a very large number of identical errors.

LSIBSM contained Bible book names with embedded double and single quotes. I escaped them using commas as a guide.

Differences:

haiola_id == id in every case except ENGESV, where it is absent
type == 'bible' in every file
name is absent for BULB40
nameEnglish is absent for ENGESV
hasLemma is absent from ENGESV
abbr is always equal to id
dir is always ltr or rtl
lang is sometimes uppercase and sometimes lowercase
lang is different than id[0:3] only 26 times
fontClass is absent for ENGESV
script is absent for ENGESV
dialectCode is absent for ENGESV
dialectCode[0:3] is always equal to lang
dialectCode[3:] is always 'Latin', which is not correct
audioDirectory is absent for ENGESV
audioDirectory is always the same as bibleId
the first part of a filename is media: text or audio
the second part of the filename is the same as bibleId, except about 80 times
the third part of the filename is almost always the same at the bibleId, but there are 3 exceptions:
	bibleId= GRTBBS fileId= GUDBSCI someId= GUDBSC lang= grt (this one is a duplicate GRTBBS)
	bibleId= AMPWBT someId= AM1WBT bibleId=fileId lang= amp (appears to be a lang difference, usually done in fileId)
	bibleId= MLYBSM fileId= ZLMTMV someId= ZLMBSM lang= mly
lang is different than the second part of filename [0:3], 53 times
lang is different than the third part of filename [0:3] 28 times

There are 218 json.info bibleIds that exit in two info.json files.
There are 5 text info.json files with 5 parts
There are 206 text info.json files with 3 parts
There are 1128 text info.json files with 4 parts
In every case of the duplicates, there is one of the two that consists of 4 parts.
I conclude that it is correct to only use the ones that consist of 4 parts

======== Change program to only read those with 4 parts, and redo tests ===========

There are still the following Duplicates:
Duplicate bibleId= DGABSG first= text:DGABSG:DGABSG:info.json BEST= text:DGANEW:DGABSG:info.json BEST is more complete
Duplicate bibleId= SPNWTC BEST= text:SPNWTC:SPNWTC:info.json next= text:SPAWTC:SPNWTC:info.json BEST has correct lang code
Duplicate bibleId= MLYBSM BEST= text:ZLMTMV:ZLMBSM:info.json next= text:ZLMTMV:MLYBSM:info.json BEST has country code
Duplicate bibleId= IJCBSN first= text:IJCNEW:IJCBSN:info.json BEST= text:IJCBSN:IJCBSN:info.json They are the SAME
Duplicate bibleId= GRTBBS first= BEST:GRTBBS:GRTBBS:info.json next= text:GUDBSCI:GUDBSC:info.json BEST is more localized
Duplicate bibleId= AZEBSA first= text:AZEBSA:AZEBSA:info.json next= text:AZJBSA:AZEBSA:info.json They are two different,
but related languages.  One is Latin/ltr and the other Arabic/rtl, but they are both marked rtl
Duplicate bibleId= ZCAWYI BEST= text:ZCAWBT:ZCAWYI:info.json next= text:ZCAWYI:ZCAWYI:info.json BEST is more complete
Duplicate bibleId= RONERV first= text:RONWTC:RONWTC:info.json BEST= text:RONWTC:RONERV:info.json BEST uses 3 usfm book codes
Duplicate bibleId= TGKIBT first= text:TGKIBT:TGKIBT:info.json BEST= text:TGKIBC:TGKIBC:info.json BEST is more localized

There was one file that contained two character book references, but the Bible in
It was text/SUSFBI/SUSAPB/info.json, but it existed in both the 2 char format and the three char format

Also, text/ENGESV/ENGESV/info.json contains only 2 character book references







