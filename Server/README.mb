Bible Download Analytics
========================

Download Analytics
------------------

Download the Analytics data that is stored in AWS S3, and populate Analytics.db

	./DownloadAnalytics.sh

	sqlite Analytics.db	
	
Analytics.db has Views Intended to Simplify Query
-------------------------------------------------
	
Limit Result to GET.OBJECT by userid BibleApp and all errors

	CREATE view DownloadErrors AS
	SELECT bucket, datetime, filename, httpStatus, prefLocale, locale, error, tranSize, fileSize, totalms, s3ms,
	manufacturer, model, osType, osVersion
	from bibledownload 
	where operation='REST.GET.OBJECT' 
	and userid like '%BibleApp'
	and (httpStatus != 200 or error is not null);

Limit Result to Successful GET.OBJECT by userid BibleApp

	CREATE view DownloadSuccess AS
	SELECT strftime('%Y', datetime) as year, strftime('%m', datetime) as month, strftime('%d', datetime) as day, strftime('%H', datetime) as hour,
	datetime, substr(prefLocale, 1, 2) as language, substr(locale, -2, 2) as country, prefLocale, locale, 
	substr(bucket, 12) as region, substr(filename, 1, instr(filename, '.')-1) as version,
	tranSize, fileSize, totalms, s3ms, manufacturer, model, osType, osVersion
	from bibledownload 
	where operation='REST.GET.OBJECT' 
	and httpStatus=200
	and error is null
	and userid like '%BibleApp'
	and osType != 'curl';
	
Limit Result to Successful GET.OBJECT by userid BibleApp of ERV
Also, limit content somewhat

	CREATE view DownloadERV AS
	SELECT strftime('%Y', datetime) as year, strftime('%m', datetime) as month, strftime('%d', datetime) as day, strftime('%H', datetime) as hour,
	datetime, substr(prefLocale, 1, 2) as language, substr(locale, -2, 2) as country,
	substr(bucket, 12) as region, substr(filename, 1, instr(filename, '.')-1) as version,
	tranSize, fileSize, totalms, s3ms, manufacturer, model, osType, osVersion
	from bibledownload 
	where operation='REST.GET.OBJECT' 
	and httpStatus=200
	and error is null
	and userid like '%BibleApp'
	and osType != 'curl'
	and version like 'ERV%';
	
Build Reporting Database
------------------------

This section creates a reporting database specifically for ERV (Bible League Intl.)

1. Under the directory Analytics create a subdirectory named year_month.
2. Copy build_db.sh into the directory.
3. Update the copied build_db.sh to have the correct date range in its.
4. Execute the build_db.sh script.  

It will create the following files:
	downloadERV.sql
	versions.sql
	DownloadERV.db
	
It will create the following tables:
	AWSRegion
	BibleDownload
	Language
	Region
	
It will create the following view:
	DownloadERV
	

Compute Summary Tables for Reporting
------------------------------------

This section adds computed tables to the DownloadERV.db

1. In the prior reporting period, find files compute.sh, PieChart.js, Pivot3.js
2. Copy the files into the current Analytics/year_mon directory.
3. Review compute.sh to see if any new calculations are required.
4. Execute the compute.sh script

It will create the following tables:
	VersionByCountry
	VersionByDeviceOS
	VersionByLanguage
	VersionByMonth  
	
It will create the following output file that can be loaded into Numbers or Excel
	VersionByMonth.csv
	VersionByCountry.csv
	VersionByLanguage.csv
	VersionByDeviceOS.csv

	
Build Tables and Pie Charts
---------------------------

Load the following files into Numbers or Excel and prepare
the described spreadsheets and graphs

VersionByMonth.csv

	Translations By Month - Stacked Bar Graph
		Version on Y Axis
		Months Stacked
		Sum on X Axis
		
	Translations By Month - Spreadsheet
		Version on Y Axis
		Months on X Axis
		Sum in Cells
		Total for period in rightmost column
		
VersionByCountry.csv
	
	Translations By Country - Pie Chart
		Pie Chart of each Version
		Slices are Countries
		
	Translations By Country - Spreadsheet
		Country name on Y Axis
		Version on X Axis
		Sum in Cells
		Total for country in rightmost column
		
VersionByLanguage.csv

	Translations By User's Preferred Language - Spreadsheet
		Language on Y Axis
		Version on X Axis
		Sum in Cells
		Total for language in rightmost column
		
VersionByDeviceOS.csv
	
	Translations by Device OS - Stacked Bar Graph
		Version on Y Axis
		OS on Stack
		Sum on X Axis
		
	Translations by Device OS - Spreadsheet
		Version on Y Axis
		Device OS on X Axis
		Sum in cells
		Total for Version in rightmost column
	


	
PieChart.js requires the following parameters

	node PieChart.js databaseName tableName chartColumn pieceColumn value

Table: Downloads by Version and Month.  Presented as a table and a stacked graph

	node Pivot3.js DownloadERV.db DownloadERV month version sum

Pie Charts: Downloads by Country and Version.  Presented as a pie chart for each version
and as a table

Table: Downloads by Version and user's preferred language.  Presented as a table

Downloads by Version and Device OS, Presented as a stacked graph and a table
	
	
